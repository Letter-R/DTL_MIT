/*
 * Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
 * 
 * On Thu Mar  7 15:36:37 UTC 2024
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkXsimTop_h__
#define __mkXsimTop_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkMMUIndicationOutput.h"
#include "mkMMURequestInput.h"
#include "mkMMUSynth.h"
#include "mkMemServerIndicationOutput.h"
#include "mkMemServerRequestInput.h"
#include "mkConnectalMemoryInitializationInput.h"
#include "mkConnectalProcIndicationOutput.h"
#include "mkConnectalProcRequestInput.h"
#include "mkProc.h"


/* Class declaration for the mkXsimTop module */
class MOD_mkXsimTop : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
  tClock __clk_handle_1;
  tClock __clk_handle_2;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_dumpstarted;
  MOD_Reg<tUInt8> INST_initCalled;
  MOD_mkMMUIndicationOutput INST_lMMUIndicationOutput;
  MOD_Reg<tUInt8> INST_lMMUIndicationOutputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMMUIndicationOutputNoc_fifoMsgSource;
  MOD_Reg<tUInt32> INST_lMMUIndicationOutputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMMUIndicationOutputNoc_methodIdReg;
  MOD_mkMMURequestInput INST_lMMURequestInput;
  MOD_Reg<tUInt8> INST_lMMURequestInputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMMURequestInputNoc_fifoMsgSink;
  MOD_Reg<tUInt8> INST_lMMURequestInputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMMURequestInputNoc_methodIdReg;
  MOD_mkMMUSynth INST_lMMU_mmu;
  MOD_mkMemServerIndicationOutput INST_lMemServerIndicationOutput;
  MOD_Reg<tUInt8> INST_lMemServerIndicationOutputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMemServerIndicationOutputNoc_fifoMsgSource;
  MOD_Reg<tUInt32> INST_lMemServerIndicationOutputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMemServerIndicationOutputNoc_methodIdReg;
  MOD_mkMemServerRequestInput INST_lMemServerRequestInput;
  MOD_Reg<tUInt8> INST_lMemServerRequestInputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMemServerRequestInputNoc_fifoMsgSink;
  MOD_Reg<tUInt8> INST_lMemServerRequestInputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMemServerRequestInputNoc_methodIdReg;
  MOD_Fifo<tUInt32> INST_lMemServer_reader_addrReqFifo;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_reader_dbgFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgPtr;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_mmu_servers_0_tokFifo;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_beatCount;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_burstReg;
  MOD_RegFile<tUInt8,tUInt32> INST_lMemServer_reader_readers_0_clientBurstLen;
  MOD_BRAM<tUInt32,tUWide,tUInt8> INST_lMemServer_reader_readers_0_clientData_memory;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_dequeueing;
  MOD_Wire<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_enqw;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_dequeueing;
  MOD_Wire<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_enqw;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_writeWithResp;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_clientRequest;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_clientSelect;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_compClientReg;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_compCountReg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_compTagReg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_compTileReg;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_cycle_cnt;
  MOD_Fifo<tUInt64> INST_lMemServer_reader_readers_0_dmaErrorFifo;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_firstReg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_0;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_1;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_2;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_3;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_comp;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_loadClient;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_mmuResp;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_readData;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_readReq;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_serverData;
  MOD_BRAM<tUInt8,tUInt32,tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_memory;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_dequeueing;
  MOD_Wire<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_enqw;
  MOD_Fifo<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_dequeueing;
  MOD_Wire<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_enqw;
  MOD_Fifo<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_writeWithResp;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_serverRequest;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_serverTag;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_0;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_1;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_2;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_3;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_comp_fifo;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_tag_gen_comp_state;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_dec_wire;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_inc_wire;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_positive_reg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_head_ptr;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_inited;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_retFifo;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_tagFifo;
  MOD_CReg<tUInt32> INST_lMemServer_reader_readers_0_tag_gen_tags;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_tail_ptr;
  MOD_Reg<tUInt64> INST_lMemServer_reader_trafficAccum;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_reader_trafficFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficPtr;
  MOD_Fifo<tUInt32> INST_lMemServer_writer_addrReqFifo;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_writer_dbgFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgPtr;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_mmu_servers_0_tokFifo;
  MOD_Reg<tUInt64> INST_lMemServer_writer_trafficAccum;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_writer_trafficFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficPtr;
  MOD_Reg<tUInt32> INST_lMemServer_writer_writers_0_beatCount;
  MOD_Reg<tUInt32> INST_lMemServer_writer_writers_0_burstReg;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_clientRequest;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_clientResponse;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_clientWriteData_0;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_clientWriteData_1;
  MOD_Reg<tUInt64> INST_lMemServer_writer_writers_0_cycle_cnt;
  MOD_Fifo<tUInt64> INST_lMemServer_writer_writers_0_dmaErrorFifo;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_firstReg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_0;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_1;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_2;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_3;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_lastReg;
  MOD_Reg<tUInt64> INST_lMemServer_writer_writers_0_last_loadClient;
  MOD_Reg<tUInt64> INST_lMemServer_writer_writers_0_last_mmuResp;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_memDataFifo;
  MOD_BRAM<tUInt8,tUInt8,tUInt8> INST_lMemServer_writer_writers_0_respFifos_memory;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_dequeueing;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_enqw;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_dequeueing;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_enqw;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_writeWithResp;
  MOD_Fifo<tUInt32> INST_lMemServer_writer_writers_0_serverProcessing;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_serverRequest;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_0;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_1;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_2;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_3;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_comp_fifo;
  MOD_Reg<tUInt32> INST_lMemServer_writer_writers_0_tag_gen_comp_state;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_dec_wire;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_inc_wire;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_positive_reg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_head_ptr;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_inited;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_retFifo;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_tagFifo;
  MOD_CReg<tUInt32> INST_lMemServer_writer_writers_0_tag_gen_tags;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_tail_ptr;
  MOD_Fifo<tUWide> INST_slave_2_0_bFifo;
  MOD_Reg<tUInt8> INST_slave_2_0_burstReg;
  MOD_Reg<tUInt64> INST_slave_2_0_cycles;
  MOD_Reg<tUInt64> INST_slave_2_0_last_read_eob;
  MOD_Reg<tUInt64> INST_slave_2_0_last_reqAr;
  MOD_Reg<tUInt64> INST_slave_2_0_last_write_eob;
  MOD_Fifo<tUWide> INST_slave_2_0_readDelayFifo;
  MOD_Reg<tUInt32> INST_slave_2_0_readLenReg;
  MOD_Reg<tUInt32> INST_slave_2_0_readOffsetReg;
  MOD_Reg<tUInt64> INST_slave_2_0_req_ar_b_ts;
  MOD_Reg<tUInt64> INST_slave_2_0_req_aw_b_ts;
  MOD_Fifo<tUInt8> INST_slave_2_0_reqs;
  MOD_Fifo<tUInt64> INST_slave_2_0_rw_dataFifo;
  MOD_Fifo<tUInt8> INST_slave_2_0_taglastfifo;
  MOD_Fifo<tUWide> INST_slave_2_0_writeDelayFifo;
  MOD_Reg<tUInt32> INST_slave_2_0_writeLenReg;
  MOD_Reg<tUInt32> INST_slave_2_0_writeOffsetReg;
  MOD_mkConnectalMemoryInitializationInput INST_top_lConnectalMemoryInitializationInput;
  MOD_Reg<tUInt8> INST_top_lConnectalMemoryInitializationInputNoc_bpState;
  MOD_Fifo<tUInt32> INST_top_lConnectalMemoryInitializationInputNoc_fifoMsgSink;
  MOD_Reg<tUInt8> INST_top_lConnectalMemoryInitializationInputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_top_lConnectalMemoryInitializationInputNoc_methodIdReg;
  MOD_mkConnectalProcIndicationOutput INST_top_lConnectalProcIndicationOutput;
  MOD_Reg<tUInt8> INST_top_lConnectalProcIndicationOutputNoc_bpState;
  MOD_Fifo<tUInt32> INST_top_lConnectalProcIndicationOutputNoc_fifoMsgSource;
  MOD_Reg<tUInt32> INST_top_lConnectalProcIndicationOutputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_top_lConnectalProcIndicationOutputNoc_methodIdReg;
  MOD_mkConnectalProcRequestInput INST_top_lConnectalProcRequestInput;
  MOD_Reg<tUInt8> INST_top_lConnectalProcRequestInputNoc_bpState;
  MOD_Fifo<tUInt32> INST_top_lConnectalProcRequestInputNoc_fifoMsgSink;
  MOD_Reg<tUInt8> INST_top_lConnectalProcRequestInputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_top_lConnectalProcRequestInputNoc_methodIdReg;
  MOD_Reg<tUInt8> INST_top_lConnectalWrapper_isResetting;
  MOD_MakeReset INST_top_lConnectalWrapper_my_rst;
  MOD_Reg<tUInt8> INST_top_lConnectalWrapper_ready;
  MOD_Reg<tUInt8> INST_top_lConnectalWrapper_resetCnt;
  MOD_mkProc INST_top_lConnectalWrapper_riscv_processor;
 
 /* Constructor */
 public:
  MOD_mkXsimTop(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
  void init_symbols_1();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_top_lConnectalWrapper_my_rst$OUT_RST;
  tUInt8 PORT_RST_N_derivedReset;
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_x__h3353;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_1;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut;
  tUInt8 DEF_WILL_FIRE___me_check_132;
  tUInt8 DEF_CAN_FIRE___me_check_132;
  tUInt8 DEF_WILL_FIRE___me_check_131;
  tUInt8 DEF_CAN_FIRE___me_check_131;
  tUInt8 DEF_WILL_FIRE___me_check_130;
  tUInt8 DEF_CAN_FIRE___me_check_130;
  tUInt8 DEF_WILL_FIRE___me_check_129;
  tUInt8 DEF_CAN_FIRE___me_check_129;
  tUInt8 DEF_WILL_FIRE___me_check_119;
  tUInt8 DEF_CAN_FIRE___me_check_119;
  tUInt8 DEF_WILL_FIRE___me_check_118;
  tUInt8 DEF_CAN_FIRE___me_check_118;
  tUInt8 DEF_WILL_FIRE___me_check_83;
  tUInt8 DEF_CAN_FIRE___me_check_83;
  tUInt8 DEF_WILL_FIRE___me_check_82;
  tUInt8 DEF_CAN_FIRE___me_check_82;
  tUInt8 DEF_WILL_FIRE___me_check_81;
  tUInt8 DEF_CAN_FIRE___me_check_81;
  tUInt8 DEF_WILL_FIRE___me_check_80;
  tUInt8 DEF_CAN_FIRE___me_check_80;
  tUInt8 DEF_WILL_FIRE___me_check_70;
  tUInt8 DEF_CAN_FIRE___me_check_70;
  tUInt8 DEF_WILL_FIRE___me_check_69;
  tUInt8 DEF_CAN_FIRE___me_check_69;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_4;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_4;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_3;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_3;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_2;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_2;
  tUInt8 DEF_WILL_FIRE_RL_slave_2_0_read_rule;
  tUInt8 DEF_CAN_FIRE_RL_slave_2_0_read_rule;
  tUInt8 DEF_WILL_FIRE_RL_slave_2_0_increment_cycle;
  tUInt8 DEF_CAN_FIRE_RL_slave_2_0_increment_cycle;
  tUInt8 DEF_WILL_FIRE_RL_ind_dst_rdy_2;
  tUInt8 DEF_CAN_FIRE_RL_ind_dst_rdy_2;
  tUInt8 DEF_WILL_FIRE_RL_ind_dst_rdy_1;
  tUInt8 DEF_CAN_FIRE_RL_ind_dst_rdy_1;
  tUInt8 DEF_WILL_FIRE_RL_ind_dst_rdy;
  tUInt8 DEF_CAN_FIRE_RL_ind_dst_rdy;
  tUInt8 DEF_WILL_FIRE_RL_req_src_rdy_3;
  tUInt8 DEF_CAN_FIRE_RL_req_src_rdy_3;
  tUInt8 DEF_WILL_FIRE_RL_req_src_rdy_2;
  tUInt8 DEF_CAN_FIRE_RL_req_src_rdy_2;
  tUInt8 DEF_WILL_FIRE_RL_req_src_rdy_1;
  tUInt8 DEF_CAN_FIRE_RL_req_src_rdy_1;
  tUInt8 DEF_WILL_FIRE_RL_req_src_rdy;
  tUInt8 DEF_CAN_FIRE_RL_req_src_rdy;
  tUInt8 DEF_WILL_FIRE_RL_lMemServerRequestInputNoc_receiveMessage;
  tUInt8 DEF_CAN_FIRE_RL_lMemServerRequestInputNoc_receiveMessage;
  tUInt8 DEF_WILL_FIRE_RL_lMemServerRequestInputNoc_receiveMessageHeader;
  tUInt8 DEF_CAN_FIRE_RL_lMemServerRequestInputNoc_receiveMessageHeader;
  tUInt8 DEF_WILL_FIRE_RL_lMemServerIndicationOutputNoc_sendMessage;
  tUInt8 DEF_CAN_FIRE_RL_lMemServerIndicationOutputNoc_sendMessage;
  tUInt8 DEF_WILL_FIRE_RL_lMemServerIndicationOutputNoc_sendHeader;
  tUInt8 DEF_CAN_FIRE_RL_lMemServerIndicationOutputNoc_sendHeader;
  tUInt8 DEF_WILL_FIRE_RL_lMMURequestInputNoc_receiveMessage;
  tUInt8 DEF_CAN_FIRE_RL_lMMURequestInputNoc_receiveMessage;
  tUInt8 DEF_WILL_FIRE_RL_lMMURequestInputNoc_receiveMessageHeader;
  tUInt8 DEF_CAN_FIRE_RL_lMMURequestInputNoc_receiveMessageHeader;
  tUInt8 DEF_WILL_FIRE_RL_lMMUIndicationOutputNoc_sendMessage;
  tUInt8 DEF_CAN_FIRE_RL_lMMUIndicationOutputNoc_sendMessage;
  tUInt8 DEF_WILL_FIRE_RL_lMMUIndicationOutputNoc_sendHeader;
  tUInt8 DEF_CAN_FIRE_RL_lMMUIndicationOutputNoc_sendHeader;
  tUInt8 DEF_WILL_FIRE_RL_handle_memoryTraffic_request;
  tUInt8 DEF_CAN_FIRE_RL_handle_memoryTraffic_request;
  tUInt8 DEF_WILL_FIRE_RL_handle_stateDbg_request;
  tUInt8 DEF_CAN_FIRE_RL_handle_stateDbg_request;
  tUInt8 DEF_WILL_FIRE_RL_handle_setTileState_request;
  tUInt8 DEF_CAN_FIRE_RL_handle_setTileState_request;
  tUInt8 DEF_WILL_FIRE_RL_handle_addrTrans_request;
  tUInt8 DEF_CAN_FIRE_RL_handle_addrTrans_request;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_fsm_start;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_fsm_start;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_idle_l250c4;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_idle_l250c4;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_l257c17;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_action_l257c17;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_l173c17;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_f_update_l252c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_action_f_update_l252c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_l253c10;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_action_l253c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_f_init_l252c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_action_f_init_l252c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_l251c20;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_action_l251c20;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_restart;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_restart;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_state_every;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_state_every;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_state_fired__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_state_fired__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_state_handle_abort;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_state_handle_abort;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_start_reg__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_trafficFSM_start_reg__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_fsm_start;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_fsm_start;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_idle_l241c7_1;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_idle_l241c7_1;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_idle_l241c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_idle_l241c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_action_f_update_l241c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_action_f_update_l241c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_action_l242c10;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_action_l242c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_action_l158c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_action_f_init_l241c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_action_f_init_l241c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_restart;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_restart;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_state_every;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_state_every;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_state_fired__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_state_fired__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_state_handle_abort;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_state_handle_abort;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_start_reg__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_dbgFSM_start_reg__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_mmuEntry;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_mmuEntry;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_mmuEntry;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_fill_clientResponse;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_fill_clientResponse;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_memdata;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_memdata;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_writeDoneComp0;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_writeDoneComp0;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_checkMmuResp;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_checkMmuResp;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_dmaError;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_dmaError;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_dmaError;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_cycle;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_cycle;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_tag_gen_tag_rule;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_tag_gen_tag_rule;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_tag_gen_init_rule;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_tag_gen_init_rule;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_tag_gen_ret_rule;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_tag_gen_ret_rule;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_tag_gen_complete_rule1;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_tag_gen_complete_rule1;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_tag_gen_counter_react;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_tag_gen_counter_react;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_overRun;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_overRun;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_moveToOutFIFO;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_moveToOutFIFO;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_stageReadResponseAlways;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_stageReadResponseAlways;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_finalAdd;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_finalAdd;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_dequeue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_dequeue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_enqueue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_enqueue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_overRun;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_overRun;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_moveToOutFIFO;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_moveToOutFIFO;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_stageReadResponseAlways;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_stageReadResponseAlways;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_finalAdd;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_finalAdd;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_dequeue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_dequeue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_enqueue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_enqueue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_fsm_start;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_fsm_start;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_idle_l166c4;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_idle_l166c4;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_action_l173c17;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_f_update_l168c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_action_f_update_l168c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_l169c10;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_action_l169c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_f_init_l168c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_action_f_init_l168c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_l167c20;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_action_l167c20;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_restart;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_restart;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_state_every;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_state_every;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_state_fired__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_state_fired__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_state_handle_abort;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_state_handle_abort;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_start_reg__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_trafficFSM_start_reg__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_fsm_start;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_fsm_start;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_idle_l157c7_1;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_idle_l157c7_1;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_idle_l157c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_idle_l157c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_action_f_update_l157c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_action_f_update_l157c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_action_l158c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_action_f_init_l157c7;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_action_f_init_l157c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_restart;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_restart;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_state_every;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_state_every;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_state_fired__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_state_fired__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_state_handle_abort;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_state_handle_abort;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_start_reg__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_dbgFSM_start_reg__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_mmuEntry;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_burst_remainder;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_burst_remainder;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_complete_burst1a;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_complete_burst1a;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_tag_completed;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_tag_completed;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_read_data;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_read_data;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_checkMmuResp;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_checkMmuResp;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_dmaError;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_cycle;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_cycle;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_tag_gen_tag_rule;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_tag_gen_tag_rule;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_tag_gen_init_rule;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_tag_gen_init_rule;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_tag_gen_ret_rule;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_tag_gen_ret_rule;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_tag_gen_complete_rule1;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_tag_gen_complete_rule1;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_tag_gen_counter_react;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_tag_gen_counter_react;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_overRun;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_overRun;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_moveToOutFIFO;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_moveToOutFIFO;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_stageReadResponseAlways;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_stageReadResponseAlways;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_s1__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_s1__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_finalAdd;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_finalAdd;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_dequeue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_dequeue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_enqueue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_enqueue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_overRun;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_overRun;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_moveToOutFIFO;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_moveToOutFIFO;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_stageReadResponseAlways;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_stageReadResponseAlways;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_s1__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_s1__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_finalAdd;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_finalAdd;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_dequeue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_dequeue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_enqueue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_enqueue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_overRun;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_overRun;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_moveToOutFIFO;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_moveToOutFIFO;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_stageReadResponseAlways;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_stageReadResponseAlways;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_finalAdd;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_finalAdd;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_dequeue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_dequeue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_enqueue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_enqueue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_overRun;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_overRun;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_moveToOutFIFO;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_moveToOutFIFO;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_stageReadResponseAlways;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_stageReadResponseAlways;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_finalAdd;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_finalAdd;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_dequeue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_dequeue;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_enqueue;
  tUInt8 DEF_CAN_FIRE_RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_enqueue;
  tUInt8 DEF_WILL_FIRE_RL_handle_setInterface_request;
  tUInt8 DEF_CAN_FIRE_RL_handle_setInterface_request;
  tUInt8 DEF_WILL_FIRE_RL_handle_idReturn_request;
  tUInt8 DEF_CAN_FIRE_RL_handle_idReturn_request;
  tUInt8 DEF_WILL_FIRE_RL_handle_idRequest_request;
  tUInt8 DEF_CAN_FIRE_RL_handle_idRequest_request;
  tUInt8 DEF_WILL_FIRE_RL_handle_region_request;
  tUInt8 DEF_CAN_FIRE_RL_handle_region_request;
  tUInt8 DEF_WILL_FIRE_RL_handle_sglist_request;
  tUInt8 DEF_CAN_FIRE_RL_handle_sglist_request;
  tUInt8 DEF_WILL_FIRE_RL_lMMU_dmaError;
  tUInt8 DEF_CAN_FIRE_RL_lMMU_dmaError;
  tUInt8 DEF_WILL_FIRE_RL_lMMU_rl_configResp;
  tUInt8 DEF_CAN_FIRE_RL_lMMU_rl_configResp;
  tUInt8 DEF_WILL_FIRE_RL_lMMU_rl_idResponse;
  tUInt8 DEF_CAN_FIRE_RL_lMMU_rl_idResponse;
  tUInt8 DEF_WILL_FIRE_RL_finish;
  tUInt8 DEF_CAN_FIRE_RL_finish;
  tUInt8 DEF_WILL_FIRE_RL_call_init;
  tUInt8 DEF_CAN_FIRE_RL_call_init;
  tUInt8 DEF_WILL_FIRE_RL_top_lConnectalMemoryInitializationInputNoc_receiveMessage;
  tUInt8 DEF_CAN_FIRE_RL_top_lConnectalMemoryInitializationInputNoc_receiveMessage;
  tUInt8 DEF_WILL_FIRE_RL_top_lConnectalMemoryInitializationInputNoc_receiveMessageHeader;
  tUInt8 DEF_CAN_FIRE_RL_top_lConnectalMemoryInitializationInputNoc_receiveMessageHeader;
  tUInt8 DEF_WILL_FIRE_RL_top_lConnectalProcRequestInputNoc_receiveMessage;
  tUInt8 DEF_CAN_FIRE_RL_top_lConnectalProcRequestInputNoc_receiveMessage;
  tUInt8 DEF_WILL_FIRE_RL_top_lConnectalProcRequestInputNoc_receiveMessageHeader;
  tUInt8 DEF_CAN_FIRE_RL_top_lConnectalProcRequestInputNoc_receiveMessageHeader;
  tUInt8 DEF_WILL_FIRE_RL_top_lConnectalProcIndicationOutputNoc_sendMessage;
  tUInt8 DEF_CAN_FIRE_RL_top_lConnectalProcIndicationOutputNoc_sendMessage;
  tUInt8 DEF_WILL_FIRE_RL_top_lConnectalProcIndicationOutputNoc_sendHeader;
  tUInt8 DEF_CAN_FIRE_RL_top_lConnectalProcIndicationOutputNoc_sendHeader;
  tUInt8 DEF_WILL_FIRE_RL_top_1_handle_softReset_request;
  tUInt8 DEF_CAN_FIRE_RL_top_1_handle_softReset_request;
  tUInt8 DEF_WILL_FIRE_RL_top_1_handle_hostToCpu_request;
  tUInt8 DEF_CAN_FIRE_RL_top_1_handle_hostToCpu_request;
  tUInt8 DEF_WILL_FIRE_RL_top_handle_request_request;
  tUInt8 DEF_CAN_FIRE_RL_top_handle_request_request;
  tUInt8 DEF_WILL_FIRE_RL_top_handle_done_request;
  tUInt8 DEF_CAN_FIRE_RL_top_handle_done_request;
  tUInt8 DEF_WILL_FIRE_RL_top_lConnectalWrapper_relayMessage;
  tUInt8 DEF_CAN_FIRE_RL_top_lConnectalWrapper_relayMessage;
  tUInt8 DEF_WILL_FIRE_RL_top_lConnectalWrapper_clearResetting;
  tUInt8 DEF_CAN_FIRE_RL_top_lConnectalWrapper_clearResetting;
  tUInt8 DEF_WILL_FIRE_RL_startdump;
  tUInt8 DEF_CAN_FIRE_RL_startdump;
  tUInt32 DEF_x__h99877;
  tUInt32 DEF_writeLen___2__h99950;
  tUInt8 DEF_x__h95077;
  tUInt8 DEF_x__h93237;
  tUInt8 DEF_client__h55635;
  tUInt8 DEF_x__h2715;
  tUWide DEF_slave_2_0_writeDelayFifo_first____d1393;
  tUWide DEF_slave_2_0_readDelayFifo_first____d1321;
  tUWide DEF_lMemServer_writer_writers_0_clientRequest_first____d855;
  tUWide DEF_lMemServer_reader_readers_0_clientRequest_first____d444;
  tUWide DEF_lMemServer_reader_readers_0_serverData_first____d474;
  tUWide DEF_slave_2_0_bFifo_first____d1430;
  tUInt64 DEF_x__h100635;
  tUInt64 DEF_lMemServerRequestInput_pipes_addrTrans_PipeOut_ETC___d1085;
  tUInt32 DEF_lMemServer_writer_writers_0_tag_gen_comp_state__h53355;
  tUInt32 DEF_t__h53739;
  tUInt32 DEF_lMemServer_reader_readers_0_tag_gen_comp_state__h14285;
  tUInt32 DEF_t__h14669;
  tUInt32 DEF_lMemServer_writer_writers_0_serverProcessing_f_ETC___d892;
  tUInt32 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d252;
  tUInt32 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d521;
  tUInt32 DEF_lMemServer_reader_readers_0_clientBurstLen_sub_ETC___d476;
  tUInt8 DEF_i__h16698;
  tUInt32 DEF_cnt__h18157;
  tUInt8 DEF_x__h94552;
  tUInt8 DEF_x__h92721;
  tUInt8 DEF__read__h48222;
  tUInt8 DEF__read__h48189;
  tUInt8 DEF__read__h5502;
  tUInt8 DEF__read__h5469;
  tUInt8 DEF_x__h2207;
  tUInt8 DEF_x__h53512;
  tUInt8 DEF_x__h14442;
  tUInt8 DEF_b__h51760;
  tUInt8 DEF_b__h50334;
  tUInt8 DEF_b__h12330;
  tUInt8 DEF_b__h10852;
  tUInt8 DEF_b__h9208;
  tUInt8 DEF_b__h7654;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d786;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d738;
  tUInt8 DEF_x__h18172;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d374;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d326;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d278;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d230;
  tUInt8 DEF_lMemServer_writer_writers_0_firstReg__h56046;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d765;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d763;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d762;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d757;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d717;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d715;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d714;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_3__h55855;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_2__h55854;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_1__h55853;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_0__h55852;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d353;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d351;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d350;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d305;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d303;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d302;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d257;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d255;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d254;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d249;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d208;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d206;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d205;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d200;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_3__h18197;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_2__h18196;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_1__h18195;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_0__h18194;
  tUInt8 DEF_top_lConnectalProcIndicationOutput_portalIfc_i_ETC___d45;
  tUInt8 DEF_top_lConnectalProcIndicationOutput_portalIfc_i_ETC___d44;
  tUInt8 DEF_lMemServerRequestInput_pipes_memoryTraffic_Pip_ETC___d1127;
  tUInt8 DEF_lMemServerRequestInput_pipes_stateDbg_PipeOut__ETC___d1116;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1217;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1216;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1215;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1214;
  tUInt8 DEF_lMMUIndicationOutput_portalIfc_indications_2_n_ETC___d1141;
  tUInt8 DEF_lMMUIndicationOutput_portalIfc_indications_1_n_ETC___d1140;
  tUInt8 DEF_lMMUIndicationOutput_portalIfc_indications_0_n_ETC___d1139;
  tUInt8 DEF_x_wget_req_tag__h8673;
  tUInt8 DEF_x_first_req_tag__h17455;
  tUInt8 DEF_x__h55647;
  tUInt8 DEF_x__h17520;
  tUInt8 DEF_lMemServer_reader_readers_0_clientBurstLen_sub_ETC___d477;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d787;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d739;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d375;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d327;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d279;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d231;
  tUInt8 DEF_SEL_ARR_NOT_lMemServer_writer_writers_0_killv__ETC___d894;
  tUInt8 DEF_SEL_ARR_NOT_lMemServer_reader_readers_0_killv__ETC___d553;
  tUInt8 DEF_SEL_ARR_NOT_lMemServer_reader_readers_0_killv__ETC___d527;
  tUInt8 DEF_lMemServer_writer_writers_0_tag_gen_tags_port1_ETC___d815;
  tUInt8 DEF_lMemServer_reader_readers_0_tag_gen_tags_port1_ETC___d403;
  tUInt8 DEF_slave_2_0_writeLenReg_401_EQ_0___d1402;
  tUInt32 DEF_y_avValue_snd_fst__h100180;
  tUInt8 DEF_lMemServerRequestInput_pipes_addrTrans_PipeOut_ETC___d1087;
  tUInt8 DEF_lMemServer_writer_addrReqFifo_first__44_BITS_3_ETC___d946;
  tUInt8 DEF_lMemServer_writer_writers_0_clientRequest_firs_ETC___d857;
  tUInt8 DEF_lMemServer_reader_addrReqFifo_first__66_BITS_3_ETC___d568;
  tUInt8 DEF_lMemServer_reader_readers_0_clientRequest_firs_ETC___d446;
  tUInt8 DEF_IF_slave_2_0_writeLenReg_401_EQ_0_402_THEN_0_C_ETC___d1406;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_3_18___d519;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_2_16___d517;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_1_14___d515;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_0_12___d513;
 
 /* Local definitions */
 private:
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1304;
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1300;
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1296;
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1292;
  tUInt32 DEF_TASK_read_simDma32___d1337;
  tUInt32 DEF_TASK_read_simDma32___d1338;
  tUInt8 DEF_TASK_dpi_cycle___d128;
  tUWide DEF_lMMURequestInput_pipes_region_PipeOut_first____d169;
  tUWide DEF_lMMURequestInput_pipes_sglist_PipeOut_first____d159;
  tUWide DEF_lMemServer_writer_writers_0_serverRequest_first____d1381;
  tUWide DEF_lMemServer_reader_readers_0_serverRequest_first____d1352;
  tUWide DEF_lMMU_mmu_errorPipe_first____d148;
  tUWide DEF_lMemServer_writer_writers_0_clientWriteData_1__ETC___d929;
  tUWide DEF_lMemServer_writer_writers_0_clientWriteData_0__ETC___d927;
  tUWide DEF_lMemServer_writer_writers_0_memDataFifo_first____d1421;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d348;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d300;
  tUWide DEF_lMemServer_reader_readers_0_clientData_memory__ETC___d381;
  tUWide DEF_lMemServer_reader_readers_0_clientData_memory__ETC___d333;
  tUInt64 DEF_x__h89848;
  tUInt64 DEF_words__h86013;
  tUInt64 DEF_x__h99111;
  tUInt64 DEF_words__h47814;
  tUInt32 DEF_data__h95036;
  tUInt32 DEF_data__h93196;
  tUInt32 DEF_x__h85424;
  tUInt32 DEF_x__h47221;
  tUInt32 DEF_data__h3312;
  tUInt32 DEF_data__h2674;
  tUInt32 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d203;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d760;
  tUInt8 DEF_x__h53868;
  tUInt8 DEF_x__h14798;
  tUWide DEF_lMemServer_writer_writers_0_clientRequest_firs_ETC___d869;
  tUWide DEF_lMemServer_reader_readers_0_clientRequest_firs_ETC___d463;
  tUInt64 DEF_lMMU_mmu_addr_1_response_get_70_BITS_39_TO_0___d871;
  tUInt64 DEF_lMMU_mmu_addr_0_response_get_64_BITS_39_TO_0___d465;
  tUInt8 DEF__0_CONCAT_DONTCARE___d221;
  tUInt8 DEF_x__h53832;
  tUInt8 DEF_x__h14762;
  tUWide DEF_lMemServer_reader_readers_0_clientRequest_firs_ETC___d469;
  tUWide DEF_lMemServer_writer_writers_0_clientRequest_firs_ETC___d876;
  tUWide DEF__2_CONCAT_DONTCARE___d1004;
  tUWide DEF_slave_2_0_cycles_313_CONCAT_lMemServer_reader__ETC___d1363;
  tUWide DEF_slave_2_0_cycles_313_CONCAT_lMemServer_writer__ETC___d1391;
  tUWide DEF_slave_2_0_rw_dataFifo_first__371_CONCAT_slave__ETC___d1373;
  tUWide DEF_lMemServer_reader_readers_0_serverData_first___ETC___d498;
  tUWide DEF_IF_SEL_ARR_NOT_lMemServer_writer_writers_0_kil_ETC___d935;
  tUWide DEF_slave_2_0_cycles_313_CONCAT_slave_2_0_writeDel_ETC___d1428;
  tUWide DEF__1_CONCAT_DONTCARE___d20;
  tUWide DEF__0_CONCAT_top_lConnectalMemoryInitializationInp_ETC___d32;
 
 /* Rules */
 public:
  void RL_startdump();
  void RL_top_lConnectalWrapper_clearResetting();
  void RL_top_lConnectalWrapper_relayMessage();
  void RL_top_handle_done_request();
  void RL_top_handle_request_request();
  void RL_top_1_handle_hostToCpu_request();
  void RL_top_1_handle_softReset_request();
  void RL_top_lConnectalProcIndicationOutputNoc_sendHeader();
  void RL_top_lConnectalProcIndicationOutputNoc_sendMessage();
  void RL_top_lConnectalProcRequestInputNoc_receiveMessageHeader();
  void RL_top_lConnectalProcRequestInputNoc_receiveMessage();
  void RL_top_lConnectalMemoryInitializationInputNoc_receiveMessageHeader();
  void RL_top_lConnectalMemoryInitializationInputNoc_receiveMessage();
  void RL_call_init();
  void RL_finish();
  void RL_lMMU_rl_idResponse();
  void RL_lMMU_rl_configResp();
  void RL_lMMU_dmaError();
  void RL_handle_sglist_request();
  void RL_handle_region_request();
  void RL_handle_idRequest_request();
  void RL_handle_idReturn_request();
  void RL_handle_setInterface_request();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_enqueue();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_dequeue();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_overRun();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_enqueue();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_dequeue();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_overRun();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_enqueue();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_dequeue();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_overRun();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_enqueue();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_dequeue();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_overRun();
  void RL_lMemServer_reader_readers_0_tag_gen_counter_react();
  void RL_lMemServer_reader_readers_0_tag_gen_complete_rule1();
  void RL_lMemServer_reader_readers_0_tag_gen_ret_rule();
  void RL_lMemServer_reader_readers_0_tag_gen_init_rule();
  void RL_lMemServer_reader_readers_0_tag_gen_tag_rule();
  void RL_lMemServer_reader_readers_0_cycle();
  void RL_lMemServer_reader_readers_0_dmaError();
  void RL_lMemServer_reader_readers_0_checkMmuResp();
  void RL_lMemServer_reader_readers_0_read_data();
  void RL_lMemServer_reader_readers_0_tag_completed();
  void RL_lMemServer_reader_readers_0_complete_burst1a();
  void RL_lMemServer_reader_readers_0_burst_remainder();
  void RL_lMemServer_reader_mmuEntry();
  void RL_lMemServer_reader_dbgFSM_start_reg__dreg_update();
  void RL_lMemServer_reader_dbgFSM_state_handle_abort();
  void RL_lMemServer_reader_dbgFSM_state_fired__dreg_update();
  void RL_lMemServer_reader_dbgFSM_state_every();
  void RL_lMemServer_reader_dbgFSM_restart();
  void RL_lMemServer_reader_dbgFSM_action_f_init_l157c7();
  void RL_lMemServer_reader_dbgFSM_action_l158c10();
  void RL_lMemServer_reader_dbgFSM_action_f_update_l157c7();
  void RL_lMemServer_reader_dbgFSM_idle_l157c7();
  void RL_lMemServer_reader_dbgFSM_idle_l157c7_1();
  void RL_lMemServer_reader_dbgFSM_fsm_start();
  void RL_lMemServer_reader_trafficFSM_start_reg__dreg_update();
  void RL_lMemServer_reader_trafficFSM_state_handle_abort();
  void RL_lMemServer_reader_trafficFSM_state_fired__dreg_update();
  void RL_lMemServer_reader_trafficFSM_state_every();
  void RL_lMemServer_reader_trafficFSM_restart();
  void RL_lMemServer_reader_trafficFSM_action_l167c20();
  void RL_lMemServer_reader_trafficFSM_action_f_init_l168c7();
  void RL_lMemServer_reader_trafficFSM_action_l169c10();
  void RL_lMemServer_reader_trafficFSM_action_f_update_l168c7();
  void RL_lMemServer_reader_trafficFSM_action_l173c17();
  void RL_lMemServer_reader_trafficFSM_idle_l166c4();
  void RL_lMemServer_reader_trafficFSM_fsm_start();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_enqueue();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_dequeue();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_finalAdd();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1__dreg_update();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_stageReadResponseAlways();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_moveToOutFIFO();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_overRun();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_enqueue();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_dequeue();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_finalAdd();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1__dreg_update();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_stageReadResponseAlways();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_moveToOutFIFO();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_overRun();
  void RL_lMemServer_writer_writers_0_tag_gen_counter_react();
  void RL_lMemServer_writer_writers_0_tag_gen_complete_rule1();
  void RL_lMemServer_writer_writers_0_tag_gen_ret_rule();
  void RL_lMemServer_writer_writers_0_tag_gen_init_rule();
  void RL_lMemServer_writer_writers_0_tag_gen_tag_rule();
  void RL_lMemServer_writer_writers_0_cycle();
  void RL_lMemServer_writer_writers_0_dmaError();
  void RL_lMemServer_writer_writers_0_checkMmuResp();
  void RL_lMemServer_writer_writers_0_writeDoneComp0();
  void RL_lMemServer_writer_writers_0_memdata();
  void RL_lMemServer_writer_writers_0_fill_clientResponse();
  void RL_lMemServer_writer_mmuEntry();
  void RL_lMemServer_writer_dbgFSM_start_reg__dreg_update();
  void RL_lMemServer_writer_dbgFSM_state_handle_abort();
  void RL_lMemServer_writer_dbgFSM_state_fired__dreg_update();
  void RL_lMemServer_writer_dbgFSM_state_every();
  void RL_lMemServer_writer_dbgFSM_restart();
  void RL_lMemServer_writer_dbgFSM_action_f_init_l241c7();
  void RL_lMemServer_writer_dbgFSM_action_l242c10();
  void RL_lMemServer_writer_dbgFSM_action_f_update_l241c7();
  void RL_lMemServer_writer_dbgFSM_idle_l241c7();
  void RL_lMemServer_writer_dbgFSM_idle_l241c7_1();
  void RL_lMemServer_writer_dbgFSM_fsm_start();
  void RL_lMemServer_writer_trafficFSM_start_reg__dreg_update();
  void RL_lMemServer_writer_trafficFSM_state_handle_abort();
  void RL_lMemServer_writer_trafficFSM_state_fired__dreg_update();
  void RL_lMemServer_writer_trafficFSM_state_every();
  void RL_lMemServer_writer_trafficFSM_restart();
  void RL_lMemServer_writer_trafficFSM_action_l251c20();
  void RL_lMemServer_writer_trafficFSM_action_f_init_l252c7();
  void RL_lMemServer_writer_trafficFSM_action_l253c10();
  void RL_lMemServer_writer_trafficFSM_action_f_update_l252c7();
  void RL_lMemServer_writer_trafficFSM_action_l257c17();
  void RL_lMemServer_writer_trafficFSM_idle_l250c4();
  void RL_lMemServer_writer_trafficFSM_fsm_start();
  void RL_handle_addrTrans_request();
  void RL_handle_setTileState_request();
  void RL_handle_stateDbg_request();
  void RL_handle_memoryTraffic_request();
  void RL_lMMUIndicationOutputNoc_sendHeader();
  void RL_lMMUIndicationOutputNoc_sendMessage();
  void RL_lMMURequestInputNoc_receiveMessageHeader();
  void RL_lMMURequestInputNoc_receiveMessage();
  void RL_lMemServerIndicationOutputNoc_sendHeader();
  void RL_lMemServerIndicationOutputNoc_sendMessage();
  void RL_lMemServerRequestInputNoc_receiveMessageHeader();
  void RL_lMemServerRequestInputNoc_receiveMessage();
  void RL_req_src_rdy();
  void RL_req_src_rdy_1();
  void RL_req_src_rdy_2();
  void RL_req_src_rdy_3();
  void RL_ind_dst_rdy();
  void RL_ind_dst_rdy_1();
  void RL_ind_dst_rdy_2();
  void RL_slave_2_0_increment_cycle();
  void RL_slave_2_0_read_rule();
  void RL_mkConnectionGetPut();
  void RL_mkConnectionGetPut_1();
  void RL_mkConnectionGetPut_2();
  void RL_mkConnectionGetPut_3();
  void RL_mkConnectionGetPut_4();
  void __me_check_69();
  void __me_check_70();
  void __me_check_80();
  void __me_check_81();
  void __me_check_82();
  void __me_check_83();
  void __me_check_118();
  void __me_check_119();
  void __me_check_129();
  void __me_check_130();
  void __me_check_131();
  void __me_check_132();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_top_lConnectalWrapper_my_rst$OUT_RST(tUInt8 ARG_rst_in);
  void reset_RST_N_derivedReset(tUInt8 ARG_rst_in);
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
  static void static_reset_top_lConnectalWrapper_my_rst$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
  void set_clk_1(char const *s);
  void set_clk_2(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkXsimTop &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkXsimTop &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkXsimTop &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkXsimTop &backing);
};

#endif /* ifndef __mkXsimTop_h__ */
