/*
 * Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
 * 
 * On Thu Mar  7 15:36:37 UTC 2024
 * 
 */
#include "bluesim_primitives.h"
#include "mkConnectalProcIndicationOutputPipes.h"


/* Constructor */
MOD_mkConnectalProcIndicationOutputPipes::MOD_mkConnectalProcIndicationOutputPipes(tSimStateHdl simHdl,
										   char const *name,
										   Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_sendMessage_responseAdapter_bits(simHdl,
					  "sendMessage_responseAdapter_bits",
					  this,
					  32u,
					  0u,
					  (tUInt8)0u),
    INST_sendMessage_responseAdapter_notEmptyReg(simHdl,
						 "sendMessage_responseAdapter_notEmptyReg",
						 this,
						 1u,
						 (tUInt8)0u,
						 (tUInt8)0u),
    INST_sendMessage_responseAdapter_shift(simHdl,
					   "sendMessage_responseAdapter_shift",
					   this,
					   6u,
					   (tUInt8)0u,
					   (tUInt8)0u),
    INST_wroteWord_responseAdapter_bits(simHdl,
					"wroteWord_responseAdapter_bits",
					this,
					32u,
					0u,
					(tUInt8)0u),
    INST_wroteWord_responseAdapter_notEmptyReg(simHdl,
					       "wroteWord_responseAdapter_notEmptyReg",
					       this,
					       1u,
					       (tUInt8)0u,
					       (tUInt8)0u),
    INST_wroteWord_responseAdapter_shift(simHdl,
					 "wroteWord_responseAdapter_shift",
					 this,
					 6u,
					 (tUInt8)0u,
					 (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  PORT_EN_portalIfc_indications_0_deq = false;
  PORT_EN_portalIfc_indications_1_deq = false;
  PORT_EN_methods_sendMessage_enq = false;
  PORT_EN_methods_wroteWord_enq = false;
  PORT_portalIfc_messageSize_size_methodNumber = 0u;
  PORT_methods_sendMessage_enq_v = 0u;
  PORT_methods_wroteWord_enq_v = 0u;
  PORT_portalIfc_intr_channel = 0u;
  PORT_portalIfc_intr_status = false;
  PORT_portalIfc_messageSize_size = 0u;
  PORT_RDY_portalIfc_messageSize_size = false;
  PORT_RDY_portalIfc_intr_status = false;
  PORT_RDY_portalIfc_intr_channel = false;
  PORT_portalIfc_indications_0_first = 0u;
  PORT_RDY_portalIfc_indications_0_first = false;
  PORT_RDY_portalIfc_indications_0_deq = false;
  PORT_portalIfc_indications_0_notEmpty = false;
  PORT_RDY_portalIfc_indications_0_notEmpty = false;
  PORT_portalIfc_indications_1_first = 0u;
  PORT_RDY_portalIfc_indications_1_first = false;
  PORT_RDY_portalIfc_indications_1_deq = false;
  PORT_portalIfc_indications_1_notEmpty = false;
  PORT_RDY_portalIfc_indications_1_notEmpty = false;
  PORT_RDY_methods_sendMessage_enq = false;
  PORT_methods_sendMessage_notFull = false;
  PORT_RDY_methods_sendMessage_notFull = false;
  PORT_RDY_methods_wroteWord_enq = false;
  PORT_methods_wroteWord_notFull = false;
  PORT_RDY_methods_wroteWord_notFull = false;
  symbol_count = 54u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkConnectalProcIndicationOutputPipes::init_symbols_0()
{
  init_symbol(&symbols[0u],
	      "CAN_FIRE_methods_sendMessage_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_sendMessage_enq,
	      1u);
  init_symbol(&symbols[1u],
	      "CAN_FIRE_methods_sendMessage_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_sendMessage_notFull,
	      1u);
  init_symbol(&symbols[2u],
	      "CAN_FIRE_methods_wroteWord_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_wroteWord_enq,
	      1u);
  init_symbol(&symbols[3u],
	      "CAN_FIRE_methods_wroteWord_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_wroteWord_notFull,
	      1u);
  init_symbol(&symbols[4u],
	      "CAN_FIRE_portalIfc_indications_0_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_0_deq,
	      1u);
  init_symbol(&symbols[5u],
	      "CAN_FIRE_portalIfc_indications_0_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_0_first,
	      1u);
  init_symbol(&symbols[6u],
	      "CAN_FIRE_portalIfc_indications_0_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_0_notEmpty,
	      1u);
  init_symbol(&symbols[7u],
	      "CAN_FIRE_portalIfc_indications_1_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_1_deq,
	      1u);
  init_symbol(&symbols[8u],
	      "CAN_FIRE_portalIfc_indications_1_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_1_first,
	      1u);
  init_symbol(&symbols[9u],
	      "CAN_FIRE_portalIfc_indications_1_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_1_notEmpty,
	      1u);
  init_symbol(&symbols[10u],
	      "CAN_FIRE_portalIfc_intr_channel",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_intr_channel,
	      1u);
  init_symbol(&symbols[11u],
	      "CAN_FIRE_portalIfc_intr_status",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_intr_status,
	      1u);
  init_symbol(&symbols[12u],
	      "CAN_FIRE_portalIfc_messageSize_size",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_messageSize_size,
	      1u);
  init_symbol(&symbols[13u],
	      "EN_methods_sendMessage_enq",
	      SYM_PORT,
	      &PORT_EN_methods_sendMessage_enq,
	      1u);
  init_symbol(&symbols[14u],
	      "EN_methods_wroteWord_enq",
	      SYM_PORT,
	      &PORT_EN_methods_wroteWord_enq,
	      1u);
  init_symbol(&symbols[15u],
	      "EN_portalIfc_indications_0_deq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_indications_0_deq,
	      1u);
  init_symbol(&symbols[16u],
	      "EN_portalIfc_indications_1_deq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_indications_1_deq,
	      1u);
  init_symbol(&symbols[17u],
	      "methods_sendMessage_enq_v",
	      SYM_PORT,
	      &PORT_methods_sendMessage_enq_v,
	      18u);
  init_symbol(&symbols[18u],
	      "methods_sendMessage_notFull",
	      SYM_PORT,
	      &PORT_methods_sendMessage_notFull,
	      1u);
  init_symbol(&symbols[19u], "methods_wroteWord_enq_v", SYM_PORT, &PORT_methods_wroteWord_enq_v, 32u);
  init_symbol(&symbols[20u],
	      "methods_wroteWord_notFull",
	      SYM_PORT,
	      &PORT_methods_wroteWord_notFull,
	      1u);
  init_symbol(&symbols[21u],
	      "portalIfc_indications_0_first",
	      SYM_PORT,
	      &PORT_portalIfc_indications_0_first,
	      32u);
  init_symbol(&symbols[22u],
	      "portalIfc_indications_0_notEmpty",
	      SYM_PORT,
	      &PORT_portalIfc_indications_0_notEmpty,
	      1u);
  init_symbol(&symbols[23u],
	      "portalIfc_indications_1_first",
	      SYM_PORT,
	      &PORT_portalIfc_indications_1_first,
	      32u);
  init_symbol(&symbols[24u],
	      "portalIfc_indications_1_notEmpty",
	      SYM_PORT,
	      &PORT_portalIfc_indications_1_notEmpty,
	      1u);
  init_symbol(&symbols[25u], "portalIfc_intr_channel", SYM_PORT, &PORT_portalIfc_intr_channel, 32u);
  init_symbol(&symbols[26u], "portalIfc_intr_status", SYM_PORT, &PORT_portalIfc_intr_status, 1u);
  init_symbol(&symbols[27u],
	      "portalIfc_messageSize_size",
	      SYM_PORT,
	      &PORT_portalIfc_messageSize_size,
	      16u);
  init_symbol(&symbols[28u],
	      "portalIfc_messageSize_size_methodNumber",
	      SYM_PORT,
	      &PORT_portalIfc_messageSize_size_methodNumber,
	      16u);
  init_symbol(&symbols[29u],
	      "RDY_methods_sendMessage_enq",
	      SYM_PORT,
	      &PORT_RDY_methods_sendMessage_enq,
	      1u);
  init_symbol(&symbols[30u],
	      "RDY_methods_sendMessage_notFull",
	      SYM_PORT,
	      &PORT_RDY_methods_sendMessage_notFull,
	      1u);
  init_symbol(&symbols[31u],
	      "RDY_methods_wroteWord_enq",
	      SYM_PORT,
	      &PORT_RDY_methods_wroteWord_enq,
	      1u);
  init_symbol(&symbols[32u],
	      "RDY_methods_wroteWord_notFull",
	      SYM_PORT,
	      &PORT_RDY_methods_wroteWord_notFull,
	      1u);
  init_symbol(&symbols[33u],
	      "RDY_portalIfc_indications_0_deq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_0_deq,
	      1u);
  init_symbol(&symbols[34u],
	      "RDY_portalIfc_indications_0_first",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_0_first,
	      1u);
  init_symbol(&symbols[35u],
	      "RDY_portalIfc_indications_0_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_0_notEmpty,
	      1u);
  init_symbol(&symbols[36u],
	      "RDY_portalIfc_indications_1_deq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_1_deq,
	      1u);
  init_symbol(&symbols[37u],
	      "RDY_portalIfc_indications_1_first",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_1_first,
	      1u);
  init_symbol(&symbols[38u],
	      "RDY_portalIfc_indications_1_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_1_notEmpty,
	      1u);
  init_symbol(&symbols[39u],
	      "RDY_portalIfc_intr_channel",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_intr_channel,
	      1u);
  init_symbol(&symbols[40u],
	      "RDY_portalIfc_intr_status",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_intr_status,
	      1u);
  init_symbol(&symbols[41u],
	      "RDY_portalIfc_messageSize_size",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_messageSize_size,
	      1u);
  init_symbol(&symbols[42u],
	      "sendMessage_responseAdapter_bits",
	      SYM_MODULE,
	      &INST_sendMessage_responseAdapter_bits);
  init_symbol(&symbols[43u],
	      "sendMessage_responseAdapter_notEmptyReg",
	      SYM_MODULE,
	      &INST_sendMessage_responseAdapter_notEmptyReg);
  init_symbol(&symbols[44u],
	      "sendMessage_responseAdapter_notEmptyReg__h339",
	      SYM_DEF,
	      &DEF_sendMessage_responseAdapter_notEmptyReg__h339,
	      1u);
  init_symbol(&symbols[45u],
	      "sendMessage_responseAdapter_shift",
	      SYM_MODULE,
	      &INST_sendMessage_responseAdapter_shift);
  init_symbol(&symbols[46u],
	      "WILL_FIRE_methods_sendMessage_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_methods_sendMessage_enq,
	      1u);
  init_symbol(&symbols[47u],
	      "WILL_FIRE_methods_wroteWord_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_methods_wroteWord_enq,
	      1u);
  init_symbol(&symbols[48u],
	      "WILL_FIRE_portalIfc_indications_0_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_indications_0_deq,
	      1u);
  init_symbol(&symbols[49u],
	      "WILL_FIRE_portalIfc_indications_1_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_indications_1_deq,
	      1u);
  init_symbol(&symbols[50u],
	      "wroteWord_responseAdapter_bits",
	      SYM_MODULE,
	      &INST_wroteWord_responseAdapter_bits);
  init_symbol(&symbols[51u],
	      "wroteWord_responseAdapter_notEmptyReg",
	      SYM_MODULE,
	      &INST_wroteWord_responseAdapter_notEmptyReg);
  init_symbol(&symbols[52u],
	      "wroteWord_responseAdapter_notEmptyReg__h399",
	      SYM_DEF,
	      &DEF_wroteWord_responseAdapter_notEmptyReg__h399,
	      1u);
  init_symbol(&symbols[53u],
	      "wroteWord_responseAdapter_shift",
	      SYM_MODULE,
	      &INST_wroteWord_responseAdapter_shift);
}


/* Rule actions */


/* Methods */

tUInt32 MOD_mkConnectalProcIndicationOutputPipes::METH_portalIfc_messageSize_size(tUInt32 ARG_portalIfc_messageSize_size_methodNumber)
{
  tUInt8 DEF_portalIfc_messageSize_size_methodNumber_EQ_0___d6;
  tUInt32 DEF_IF_portalIfc_messageSize_size_methodNumber_EQ__ETC___d8;
  PORT_portalIfc_messageSize_size_methodNumber = ARG_portalIfc_messageSize_size_methodNumber;
  DEF_IF_portalIfc_messageSize_size_methodNumber_EQ__ETC___d8 = 32u;
  DEF_portalIfc_messageSize_size_methodNumber_EQ_0___d6 = ARG_portalIfc_messageSize_size_methodNumber == 0u;
  PORT_portalIfc_messageSize_size = DEF_portalIfc_messageSize_size_methodNumber_EQ_0___d6 ? 18u : DEF_IF_portalIfc_messageSize_size_methodNumber_EQ__ETC___d8;
  return PORT_portalIfc_messageSize_size;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_portalIfc_messageSize_size()
{
  DEF_CAN_FIRE_portalIfc_messageSize_size = (tUInt8)1u;
  PORT_RDY_portalIfc_messageSize_size = DEF_CAN_FIRE_portalIfc_messageSize_size;
  return PORT_RDY_portalIfc_messageSize_size;
}

void MOD_mkConnectalProcIndicationOutputPipes::METH_methods_sendMessage_enq(tUInt32 ARG_methods_sendMessage_enq_v)
{
  tUInt32 DEF_x__h354;
  PORT_EN_methods_sendMessage_enq = (tUInt8)1u;
  DEF_WILL_FIRE_methods_sendMessage_enq = (tUInt8)1u;
  PORT_methods_sendMessage_enq_v = ARG_methods_sendMessage_enq_v;
  DEF_x__h354 = ARG_methods_sendMessage_enq_v;
  INST_sendMessage_responseAdapter_bits.METH_write(DEF_x__h354);
  INST_sendMessage_responseAdapter_notEmptyReg.METH_write((tUInt8)1u);
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_methods_sendMessage_enq()
{
  DEF_sendMessage_responseAdapter_notEmptyReg__h339 = INST_sendMessage_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3 = !DEF_sendMessage_responseAdapter_notEmptyReg__h339;
  DEF_CAN_FIRE_methods_sendMessage_enq = DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3;
  PORT_RDY_methods_sendMessage_enq = DEF_CAN_FIRE_methods_sendMessage_enq;
  return PORT_RDY_methods_sendMessage_enq;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_methods_sendMessage_notFull()
{
  DEF_sendMessage_responseAdapter_notEmptyReg__h339 = INST_sendMessage_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3 = !DEF_sendMessage_responseAdapter_notEmptyReg__h339;
  PORT_methods_sendMessage_notFull = DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3;
  return PORT_methods_sendMessage_notFull;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_methods_sendMessage_notFull()
{
  DEF_CAN_FIRE_methods_sendMessage_notFull = (tUInt8)1u;
  PORT_RDY_methods_sendMessage_notFull = DEF_CAN_FIRE_methods_sendMessage_notFull;
  return PORT_RDY_methods_sendMessage_notFull;
}

void MOD_mkConnectalProcIndicationOutputPipes::METH_methods_wroteWord_enq(tUInt32 ARG_methods_wroteWord_enq_v)
{
  PORT_EN_methods_wroteWord_enq = (tUInt8)1u;
  DEF_WILL_FIRE_methods_wroteWord_enq = (tUInt8)1u;
  PORT_methods_wroteWord_enq_v = ARG_methods_wroteWord_enq_v;
  INST_wroteWord_responseAdapter_bits.METH_write(ARG_methods_wroteWord_enq_v);
  INST_wroteWord_responseAdapter_notEmptyReg.METH_write((tUInt8)1u);
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_methods_wroteWord_enq()
{
  DEF_wroteWord_responseAdapter_notEmptyReg__h399 = INST_wroteWord_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5 = !DEF_wroteWord_responseAdapter_notEmptyReg__h399;
  DEF_CAN_FIRE_methods_wroteWord_enq = DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5;
  PORT_RDY_methods_wroteWord_enq = DEF_CAN_FIRE_methods_wroteWord_enq;
  return PORT_RDY_methods_wroteWord_enq;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_methods_wroteWord_notFull()
{
  DEF_wroteWord_responseAdapter_notEmptyReg__h399 = INST_wroteWord_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5 = !DEF_wroteWord_responseAdapter_notEmptyReg__h399;
  PORT_methods_wroteWord_notFull = DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5;
  return PORT_methods_wroteWord_notFull;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_methods_wroteWord_notFull()
{
  DEF_CAN_FIRE_methods_wroteWord_notFull = (tUInt8)1u;
  PORT_RDY_methods_wroteWord_notFull = DEF_CAN_FIRE_methods_wroteWord_notFull;
  return PORT_RDY_methods_wroteWord_notFull;
}

tUInt32 MOD_mkConnectalProcIndicationOutputPipes::METH_portalIfc_indications_0_first()
{
  PORT_portalIfc_indications_0_first = INST_sendMessage_responseAdapter_bits.METH_read();
  return PORT_portalIfc_indications_0_first;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_portalIfc_indications_0_first()
{
  DEF_sendMessage_responseAdapter_notEmptyReg__h339 = INST_sendMessage_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_0_first = DEF_sendMessage_responseAdapter_notEmptyReg__h339;
  PORT_RDY_portalIfc_indications_0_first = DEF_CAN_FIRE_portalIfc_indications_0_first;
  return PORT_RDY_portalIfc_indications_0_first;
}

void MOD_mkConnectalProcIndicationOutputPipes::METH_portalIfc_indications_0_deq()
{
  PORT_EN_portalIfc_indications_0_deq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_indications_0_deq = (tUInt8)1u;
  INST_sendMessage_responseAdapter_notEmptyReg.METH_write((tUInt8)0u);
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_portalIfc_indications_0_deq()
{
  DEF_sendMessage_responseAdapter_notEmptyReg__h339 = INST_sendMessage_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_0_deq = DEF_sendMessage_responseAdapter_notEmptyReg__h339;
  PORT_RDY_portalIfc_indications_0_deq = DEF_CAN_FIRE_portalIfc_indications_0_deq;
  return PORT_RDY_portalIfc_indications_0_deq;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_portalIfc_indications_0_notEmpty()
{
  DEF_sendMessage_responseAdapter_notEmptyReg__h339 = INST_sendMessage_responseAdapter_notEmptyReg.METH_read();
  PORT_portalIfc_indications_0_notEmpty = DEF_sendMessage_responseAdapter_notEmptyReg__h339;
  return PORT_portalIfc_indications_0_notEmpty;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_portalIfc_indications_0_notEmpty()
{
  DEF_CAN_FIRE_portalIfc_indications_0_notEmpty = (tUInt8)1u;
  PORT_RDY_portalIfc_indications_0_notEmpty = DEF_CAN_FIRE_portalIfc_indications_0_notEmpty;
  return PORT_RDY_portalIfc_indications_0_notEmpty;
}

tUInt32 MOD_mkConnectalProcIndicationOutputPipes::METH_portalIfc_indications_1_first()
{
  PORT_portalIfc_indications_1_first = INST_wroteWord_responseAdapter_bits.METH_read();
  return PORT_portalIfc_indications_1_first;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_portalIfc_indications_1_first()
{
  DEF_wroteWord_responseAdapter_notEmptyReg__h399 = INST_wroteWord_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_1_first = DEF_wroteWord_responseAdapter_notEmptyReg__h399;
  PORT_RDY_portalIfc_indications_1_first = DEF_CAN_FIRE_portalIfc_indications_1_first;
  return PORT_RDY_portalIfc_indications_1_first;
}

void MOD_mkConnectalProcIndicationOutputPipes::METH_portalIfc_indications_1_deq()
{
  PORT_EN_portalIfc_indications_1_deq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_indications_1_deq = (tUInt8)1u;
  INST_wroteWord_responseAdapter_notEmptyReg.METH_write((tUInt8)0u);
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_portalIfc_indications_1_deq()
{
  DEF_wroteWord_responseAdapter_notEmptyReg__h399 = INST_wroteWord_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_1_deq = DEF_wroteWord_responseAdapter_notEmptyReg__h399;
  PORT_RDY_portalIfc_indications_1_deq = DEF_CAN_FIRE_portalIfc_indications_1_deq;
  return PORT_RDY_portalIfc_indications_1_deq;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_portalIfc_indications_1_notEmpty()
{
  DEF_wroteWord_responseAdapter_notEmptyReg__h399 = INST_wroteWord_responseAdapter_notEmptyReg.METH_read();
  PORT_portalIfc_indications_1_notEmpty = DEF_wroteWord_responseAdapter_notEmptyReg__h399;
  return PORT_portalIfc_indications_1_notEmpty;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_portalIfc_indications_1_notEmpty()
{
  DEF_CAN_FIRE_portalIfc_indications_1_notEmpty = (tUInt8)1u;
  PORT_RDY_portalIfc_indications_1_notEmpty = DEF_CAN_FIRE_portalIfc_indications_1_notEmpty;
  return PORT_RDY_portalIfc_indications_1_notEmpty;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_portalIfc_intr_status()
{
  DEF_wroteWord_responseAdapter_notEmptyReg__h399 = INST_wroteWord_responseAdapter_notEmptyReg.METH_read();
  DEF_sendMessage_responseAdapter_notEmptyReg__h339 = INST_sendMessage_responseAdapter_notEmptyReg.METH_read();
  PORT_portalIfc_intr_status = DEF_sendMessage_responseAdapter_notEmptyReg__h339 || DEF_wroteWord_responseAdapter_notEmptyReg__h399;
  return PORT_portalIfc_intr_status;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_portalIfc_intr_status()
{
  DEF_CAN_FIRE_portalIfc_intr_status = (tUInt8)1u;
  PORT_RDY_portalIfc_intr_status = DEF_CAN_FIRE_portalIfc_intr_status;
  return PORT_RDY_portalIfc_intr_status;
}

tUInt32 MOD_mkConnectalProcIndicationOutputPipes::METH_portalIfc_intr_channel()
{
  tUInt32 DEF_IF_wroteWord_responseAdapter_notEmptyReg_THEN__ETC___d9;
  DEF_wroteWord_responseAdapter_notEmptyReg__h399 = INST_wroteWord_responseAdapter_notEmptyReg.METH_read();
  DEF_sendMessage_responseAdapter_notEmptyReg__h339 = INST_sendMessage_responseAdapter_notEmptyReg.METH_read();
  DEF_IF_wroteWord_responseAdapter_notEmptyReg_THEN__ETC___d9 = DEF_wroteWord_responseAdapter_notEmptyReg__h399 ? 1u : 4294967295u;
  PORT_portalIfc_intr_channel = DEF_sendMessage_responseAdapter_notEmptyReg__h339 ? 0u : DEF_IF_wroteWord_responseAdapter_notEmptyReg_THEN__ETC___d9;
  return PORT_portalIfc_intr_channel;
}

tUInt8 MOD_mkConnectalProcIndicationOutputPipes::METH_RDY_portalIfc_intr_channel()
{
  DEF_CAN_FIRE_portalIfc_intr_channel = (tUInt8)1u;
  PORT_RDY_portalIfc_intr_channel = DEF_CAN_FIRE_portalIfc_intr_channel;
  return PORT_RDY_portalIfc_intr_channel;
}


/* Reset routines */

void MOD_mkConnectalProcIndicationOutputPipes::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_wroteWord_responseAdapter_shift.reset_RST(ARG_rst_in);
  INST_wroteWord_responseAdapter_notEmptyReg.reset_RST(ARG_rst_in);
  INST_wroteWord_responseAdapter_bits.reset_RST(ARG_rst_in);
  INST_sendMessage_responseAdapter_shift.reset_RST(ARG_rst_in);
  INST_sendMessage_responseAdapter_notEmptyReg.reset_RST(ARG_rst_in);
  INST_sendMessage_responseAdapter_bits.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkConnectalProcIndicationOutputPipes::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkConnectalProcIndicationOutputPipes::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_sendMessage_responseAdapter_bits.dump_state(indent + 2u);
  INST_sendMessage_responseAdapter_notEmptyReg.dump_state(indent + 2u);
  INST_sendMessage_responseAdapter_shift.dump_state(indent + 2u);
  INST_wroteWord_responseAdapter_bits.dump_state(indent + 2u);
  INST_wroteWord_responseAdapter_notEmptyReg.dump_state(indent + 2u);
  INST_wroteWord_responseAdapter_shift.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkConnectalProcIndicationOutputPipes::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 57u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_sendMessage_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_sendMessage_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_wroteWord_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_wroteWord_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_0_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_0_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_0_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_1_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_1_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_1_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_intr_channel", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_intr_status", 1u);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_messageSize_size", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_sendMessage_responseAdapter_notEmptyReg___d3", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_wroteWord_responseAdapter_notEmptyReg___d5", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_methods_sendMessage_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_methods_wroteWord_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_indications_0_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_indications_1_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "sendMessage_responseAdapter_notEmptyReg__h339", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "wroteWord_responseAdapter_notEmptyReg__h399", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_methods_sendMessage_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_methods_wroteWord_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_indications_0_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_indications_1_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_sendMessage_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_sendMessage_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_wroteWord_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_wroteWord_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_0_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_0_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_0_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_1_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_1_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_1_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_intr_channel", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_intr_status", 1u);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_messageSize_size", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_sendMessage_enq_v", 18u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_sendMessage_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_wroteWord_enq_v", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_wroteWord_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_0_first", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_0_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_1_first", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_1_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_intr_channel", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_intr_status", 1u);
  vcd_write_def(sim_hdl, num++, "portalIfc_messageSize_size", 16u);
  vcd_write_def(sim_hdl, num++, "portalIfc_messageSize_size_methodNumber", 16u);
  num = INST_sendMessage_responseAdapter_bits.dump_VCD_defs(num);
  num = INST_sendMessage_responseAdapter_notEmptyReg.dump_VCD_defs(num);
  num = INST_sendMessage_responseAdapter_shift.dump_VCD_defs(num);
  num = INST_wroteWord_responseAdapter_bits.dump_VCD_defs(num);
  num = INST_wroteWord_responseAdapter_notEmptyReg.dump_VCD_defs(num);
  num = INST_wroteWord_responseAdapter_shift.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkConnectalProcIndicationOutputPipes::dump_VCD(tVCDDumpType dt,
							unsigned int levels,
							MOD_mkConnectalProcIndicationOutputPipes &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkConnectalProcIndicationOutputPipes::vcd_defs(tVCDDumpType dt,
							MOD_mkConnectalProcIndicationOutputPipes &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 18u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_methods_sendMessage_enq) != DEF_CAN_FIRE_methods_sendMessage_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_sendMessage_enq, 1u);
	backing.DEF_CAN_FIRE_methods_sendMessage_enq = DEF_CAN_FIRE_methods_sendMessage_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_sendMessage_notFull) != DEF_CAN_FIRE_methods_sendMessage_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_sendMessage_notFull, 1u);
	backing.DEF_CAN_FIRE_methods_sendMessage_notFull = DEF_CAN_FIRE_methods_sendMessage_notFull;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_wroteWord_enq) != DEF_CAN_FIRE_methods_wroteWord_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_wroteWord_enq, 1u);
	backing.DEF_CAN_FIRE_methods_wroteWord_enq = DEF_CAN_FIRE_methods_wroteWord_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_wroteWord_notFull) != DEF_CAN_FIRE_methods_wroteWord_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_wroteWord_notFull, 1u);
	backing.DEF_CAN_FIRE_methods_wroteWord_notFull = DEF_CAN_FIRE_methods_wroteWord_notFull;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_0_deq) != DEF_CAN_FIRE_portalIfc_indications_0_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_0_deq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_0_deq = DEF_CAN_FIRE_portalIfc_indications_0_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_0_first) != DEF_CAN_FIRE_portalIfc_indications_0_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_0_first, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_0_first = DEF_CAN_FIRE_portalIfc_indications_0_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_0_notEmpty) != DEF_CAN_FIRE_portalIfc_indications_0_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_0_notEmpty, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_0_notEmpty = DEF_CAN_FIRE_portalIfc_indications_0_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_1_deq) != DEF_CAN_FIRE_portalIfc_indications_1_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_1_deq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_1_deq = DEF_CAN_FIRE_portalIfc_indications_1_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_1_first) != DEF_CAN_FIRE_portalIfc_indications_1_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_1_first, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_1_first = DEF_CAN_FIRE_portalIfc_indications_1_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_1_notEmpty) != DEF_CAN_FIRE_portalIfc_indications_1_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_1_notEmpty, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_1_notEmpty = DEF_CAN_FIRE_portalIfc_indications_1_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_intr_channel) != DEF_CAN_FIRE_portalIfc_intr_channel)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_intr_channel, 1u);
	backing.DEF_CAN_FIRE_portalIfc_intr_channel = DEF_CAN_FIRE_portalIfc_intr_channel;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_intr_status) != DEF_CAN_FIRE_portalIfc_intr_status)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_intr_status, 1u);
	backing.DEF_CAN_FIRE_portalIfc_intr_status = DEF_CAN_FIRE_portalIfc_intr_status;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_messageSize_size) != DEF_CAN_FIRE_portalIfc_messageSize_size)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_messageSize_size, 1u);
	backing.DEF_CAN_FIRE_portalIfc_messageSize_size = DEF_CAN_FIRE_portalIfc_messageSize_size;
      }
      ++num;
      if ((backing.DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3) != DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3, 1u);
	backing.DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3 = DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3;
      }
      ++num;
      if ((backing.DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5) != DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5, 1u);
	backing.DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5 = DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_methods_sendMessage_enq) != DEF_WILL_FIRE_methods_sendMessage_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_methods_sendMessage_enq, 1u);
	backing.DEF_WILL_FIRE_methods_sendMessage_enq = DEF_WILL_FIRE_methods_sendMessage_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_methods_wroteWord_enq) != DEF_WILL_FIRE_methods_wroteWord_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_methods_wroteWord_enq, 1u);
	backing.DEF_WILL_FIRE_methods_wroteWord_enq = DEF_WILL_FIRE_methods_wroteWord_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_indications_0_deq) != DEF_WILL_FIRE_portalIfc_indications_0_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_indications_0_deq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_indications_0_deq = DEF_WILL_FIRE_portalIfc_indications_0_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_indications_1_deq) != DEF_WILL_FIRE_portalIfc_indications_1_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_indications_1_deq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_indications_1_deq = DEF_WILL_FIRE_portalIfc_indications_1_deq;
      }
      ++num;
      if ((backing.DEF_sendMessage_responseAdapter_notEmptyReg__h339) != DEF_sendMessage_responseAdapter_notEmptyReg__h339)
      {
	vcd_write_val(sim_hdl, num, DEF_sendMessage_responseAdapter_notEmptyReg__h339, 1u);
	backing.DEF_sendMessage_responseAdapter_notEmptyReg__h339 = DEF_sendMessage_responseAdapter_notEmptyReg__h339;
      }
      ++num;
      if ((backing.DEF_wroteWord_responseAdapter_notEmptyReg__h399) != DEF_wroteWord_responseAdapter_notEmptyReg__h399)
      {
	vcd_write_val(sim_hdl, num, DEF_wroteWord_responseAdapter_notEmptyReg__h399, 1u);
	backing.DEF_wroteWord_responseAdapter_notEmptyReg__h399 = DEF_wroteWord_responseAdapter_notEmptyReg__h399;
      }
      ++num;
      if ((backing.PORT_EN_methods_sendMessage_enq) != PORT_EN_methods_sendMessage_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_methods_sendMessage_enq, 1u);
	backing.PORT_EN_methods_sendMessage_enq = PORT_EN_methods_sendMessage_enq;
      }
      ++num;
      if ((backing.PORT_EN_methods_wroteWord_enq) != PORT_EN_methods_wroteWord_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_methods_wroteWord_enq, 1u);
	backing.PORT_EN_methods_wroteWord_enq = PORT_EN_methods_wroteWord_enq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_indications_0_deq) != PORT_EN_portalIfc_indications_0_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_indications_0_deq, 1u);
	backing.PORT_EN_portalIfc_indications_0_deq = PORT_EN_portalIfc_indications_0_deq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_indications_1_deq) != PORT_EN_portalIfc_indications_1_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_indications_1_deq, 1u);
	backing.PORT_EN_portalIfc_indications_1_deq = PORT_EN_portalIfc_indications_1_deq;
      }
      ++num;
      if ((backing.PORT_RDY_methods_sendMessage_enq) != PORT_RDY_methods_sendMessage_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_sendMessage_enq, 1u);
	backing.PORT_RDY_methods_sendMessage_enq = PORT_RDY_methods_sendMessage_enq;
      }
      ++num;
      if ((backing.PORT_RDY_methods_sendMessage_notFull) != PORT_RDY_methods_sendMessage_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_sendMessage_notFull, 1u);
	backing.PORT_RDY_methods_sendMessage_notFull = PORT_RDY_methods_sendMessage_notFull;
      }
      ++num;
      if ((backing.PORT_RDY_methods_wroteWord_enq) != PORT_RDY_methods_wroteWord_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_wroteWord_enq, 1u);
	backing.PORT_RDY_methods_wroteWord_enq = PORT_RDY_methods_wroteWord_enq;
      }
      ++num;
      if ((backing.PORT_RDY_methods_wroteWord_notFull) != PORT_RDY_methods_wroteWord_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_wroteWord_notFull, 1u);
	backing.PORT_RDY_methods_wroteWord_notFull = PORT_RDY_methods_wroteWord_notFull;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_0_deq) != PORT_RDY_portalIfc_indications_0_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_0_deq, 1u);
	backing.PORT_RDY_portalIfc_indications_0_deq = PORT_RDY_portalIfc_indications_0_deq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_0_first) != PORT_RDY_portalIfc_indications_0_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_0_first, 1u);
	backing.PORT_RDY_portalIfc_indications_0_first = PORT_RDY_portalIfc_indications_0_first;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_0_notEmpty) != PORT_RDY_portalIfc_indications_0_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_0_notEmpty, 1u);
	backing.PORT_RDY_portalIfc_indications_0_notEmpty = PORT_RDY_portalIfc_indications_0_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_1_deq) != PORT_RDY_portalIfc_indications_1_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_1_deq, 1u);
	backing.PORT_RDY_portalIfc_indications_1_deq = PORT_RDY_portalIfc_indications_1_deq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_1_first) != PORT_RDY_portalIfc_indications_1_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_1_first, 1u);
	backing.PORT_RDY_portalIfc_indications_1_first = PORT_RDY_portalIfc_indications_1_first;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_1_notEmpty) != PORT_RDY_portalIfc_indications_1_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_1_notEmpty, 1u);
	backing.PORT_RDY_portalIfc_indications_1_notEmpty = PORT_RDY_portalIfc_indications_1_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_intr_channel) != PORT_RDY_portalIfc_intr_channel)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_intr_channel, 1u);
	backing.PORT_RDY_portalIfc_intr_channel = PORT_RDY_portalIfc_intr_channel;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_intr_status) != PORT_RDY_portalIfc_intr_status)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_intr_status, 1u);
	backing.PORT_RDY_portalIfc_intr_status = PORT_RDY_portalIfc_intr_status;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_messageSize_size) != PORT_RDY_portalIfc_messageSize_size)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_messageSize_size, 1u);
	backing.PORT_RDY_portalIfc_messageSize_size = PORT_RDY_portalIfc_messageSize_size;
      }
      ++num;
      if ((backing.PORT_methods_sendMessage_enq_v) != PORT_methods_sendMessage_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_sendMessage_enq_v, 18u);
	backing.PORT_methods_sendMessage_enq_v = PORT_methods_sendMessage_enq_v;
      }
      ++num;
      if ((backing.PORT_methods_sendMessage_notFull) != PORT_methods_sendMessage_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_sendMessage_notFull, 1u);
	backing.PORT_methods_sendMessage_notFull = PORT_methods_sendMessage_notFull;
      }
      ++num;
      if ((backing.PORT_methods_wroteWord_enq_v) != PORT_methods_wroteWord_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_wroteWord_enq_v, 32u);
	backing.PORT_methods_wroteWord_enq_v = PORT_methods_wroteWord_enq_v;
      }
      ++num;
      if ((backing.PORT_methods_wroteWord_notFull) != PORT_methods_wroteWord_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_wroteWord_notFull, 1u);
	backing.PORT_methods_wroteWord_notFull = PORT_methods_wroteWord_notFull;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_0_first) != PORT_portalIfc_indications_0_first)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_0_first, 32u);
	backing.PORT_portalIfc_indications_0_first = PORT_portalIfc_indications_0_first;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_0_notEmpty) != PORT_portalIfc_indications_0_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_0_notEmpty, 1u);
	backing.PORT_portalIfc_indications_0_notEmpty = PORT_portalIfc_indications_0_notEmpty;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_1_first) != PORT_portalIfc_indications_1_first)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_1_first, 32u);
	backing.PORT_portalIfc_indications_1_first = PORT_portalIfc_indications_1_first;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_1_notEmpty) != PORT_portalIfc_indications_1_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_1_notEmpty, 1u);
	backing.PORT_portalIfc_indications_1_notEmpty = PORT_portalIfc_indications_1_notEmpty;
      }
      ++num;
      if ((backing.PORT_portalIfc_intr_channel) != PORT_portalIfc_intr_channel)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_intr_channel, 32u);
	backing.PORT_portalIfc_intr_channel = PORT_portalIfc_intr_channel;
      }
      ++num;
      if ((backing.PORT_portalIfc_intr_status) != PORT_portalIfc_intr_status)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_intr_status, 1u);
	backing.PORT_portalIfc_intr_status = PORT_portalIfc_intr_status;
      }
      ++num;
      if ((backing.PORT_portalIfc_messageSize_size) != PORT_portalIfc_messageSize_size)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_messageSize_size, 16u);
	backing.PORT_portalIfc_messageSize_size = PORT_portalIfc_messageSize_size;
      }
      ++num;
      if ((backing.PORT_portalIfc_messageSize_size_methodNumber) != PORT_portalIfc_messageSize_size_methodNumber)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_messageSize_size_methodNumber, 16u);
	backing.PORT_portalIfc_messageSize_size_methodNumber = PORT_portalIfc_messageSize_size_methodNumber;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_sendMessage_enq, 1u);
      backing.DEF_CAN_FIRE_methods_sendMessage_enq = DEF_CAN_FIRE_methods_sendMessage_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_sendMessage_notFull, 1u);
      backing.DEF_CAN_FIRE_methods_sendMessage_notFull = DEF_CAN_FIRE_methods_sendMessage_notFull;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_wroteWord_enq, 1u);
      backing.DEF_CAN_FIRE_methods_wroteWord_enq = DEF_CAN_FIRE_methods_wroteWord_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_wroteWord_notFull, 1u);
      backing.DEF_CAN_FIRE_methods_wroteWord_notFull = DEF_CAN_FIRE_methods_wroteWord_notFull;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_0_deq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_0_deq = DEF_CAN_FIRE_portalIfc_indications_0_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_0_first, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_0_first = DEF_CAN_FIRE_portalIfc_indications_0_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_0_notEmpty, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_0_notEmpty = DEF_CAN_FIRE_portalIfc_indications_0_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_1_deq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_1_deq = DEF_CAN_FIRE_portalIfc_indications_1_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_1_first, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_1_first = DEF_CAN_FIRE_portalIfc_indications_1_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_1_notEmpty, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_1_notEmpty = DEF_CAN_FIRE_portalIfc_indications_1_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_intr_channel, 1u);
      backing.DEF_CAN_FIRE_portalIfc_intr_channel = DEF_CAN_FIRE_portalIfc_intr_channel;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_intr_status, 1u);
      backing.DEF_CAN_FIRE_portalIfc_intr_status = DEF_CAN_FIRE_portalIfc_intr_status;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_messageSize_size, 1u);
      backing.DEF_CAN_FIRE_portalIfc_messageSize_size = DEF_CAN_FIRE_portalIfc_messageSize_size;
      vcd_write_val(sim_hdl, num++, DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3, 1u);
      backing.DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3 = DEF_NOT_sendMessage_responseAdapter_notEmptyReg___d3;
      vcd_write_val(sim_hdl, num++, DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5, 1u);
      backing.DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5 = DEF_NOT_wroteWord_responseAdapter_notEmptyReg___d5;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_methods_sendMessage_enq, 1u);
      backing.DEF_WILL_FIRE_methods_sendMessage_enq = DEF_WILL_FIRE_methods_sendMessage_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_methods_wroteWord_enq, 1u);
      backing.DEF_WILL_FIRE_methods_wroteWord_enq = DEF_WILL_FIRE_methods_wroteWord_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_indications_0_deq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_indications_0_deq = DEF_WILL_FIRE_portalIfc_indications_0_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_indications_1_deq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_indications_1_deq = DEF_WILL_FIRE_portalIfc_indications_1_deq;
      vcd_write_val(sim_hdl, num++, DEF_sendMessage_responseAdapter_notEmptyReg__h339, 1u);
      backing.DEF_sendMessage_responseAdapter_notEmptyReg__h339 = DEF_sendMessage_responseAdapter_notEmptyReg__h339;
      vcd_write_val(sim_hdl, num++, DEF_wroteWord_responseAdapter_notEmptyReg__h399, 1u);
      backing.DEF_wroteWord_responseAdapter_notEmptyReg__h399 = DEF_wroteWord_responseAdapter_notEmptyReg__h399;
      vcd_write_val(sim_hdl, num++, PORT_EN_methods_sendMessage_enq, 1u);
      backing.PORT_EN_methods_sendMessage_enq = PORT_EN_methods_sendMessage_enq;
      vcd_write_val(sim_hdl, num++, PORT_EN_methods_wroteWord_enq, 1u);
      backing.PORT_EN_methods_wroteWord_enq = PORT_EN_methods_wroteWord_enq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_indications_0_deq, 1u);
      backing.PORT_EN_portalIfc_indications_0_deq = PORT_EN_portalIfc_indications_0_deq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_indications_1_deq, 1u);
      backing.PORT_EN_portalIfc_indications_1_deq = PORT_EN_portalIfc_indications_1_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_sendMessage_enq, 1u);
      backing.PORT_RDY_methods_sendMessage_enq = PORT_RDY_methods_sendMessage_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_sendMessage_notFull, 1u);
      backing.PORT_RDY_methods_sendMessage_notFull = PORT_RDY_methods_sendMessage_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_wroteWord_enq, 1u);
      backing.PORT_RDY_methods_wroteWord_enq = PORT_RDY_methods_wroteWord_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_wroteWord_notFull, 1u);
      backing.PORT_RDY_methods_wroteWord_notFull = PORT_RDY_methods_wroteWord_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_0_deq, 1u);
      backing.PORT_RDY_portalIfc_indications_0_deq = PORT_RDY_portalIfc_indications_0_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_0_first, 1u);
      backing.PORT_RDY_portalIfc_indications_0_first = PORT_RDY_portalIfc_indications_0_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_0_notEmpty, 1u);
      backing.PORT_RDY_portalIfc_indications_0_notEmpty = PORT_RDY_portalIfc_indications_0_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_1_deq, 1u);
      backing.PORT_RDY_portalIfc_indications_1_deq = PORT_RDY_portalIfc_indications_1_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_1_first, 1u);
      backing.PORT_RDY_portalIfc_indications_1_first = PORT_RDY_portalIfc_indications_1_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_1_notEmpty, 1u);
      backing.PORT_RDY_portalIfc_indications_1_notEmpty = PORT_RDY_portalIfc_indications_1_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_intr_channel, 1u);
      backing.PORT_RDY_portalIfc_intr_channel = PORT_RDY_portalIfc_intr_channel;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_intr_status, 1u);
      backing.PORT_RDY_portalIfc_intr_status = PORT_RDY_portalIfc_intr_status;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_messageSize_size, 1u);
      backing.PORT_RDY_portalIfc_messageSize_size = PORT_RDY_portalIfc_messageSize_size;
      vcd_write_val(sim_hdl, num++, PORT_methods_sendMessage_enq_v, 18u);
      backing.PORT_methods_sendMessage_enq_v = PORT_methods_sendMessage_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_methods_sendMessage_notFull, 1u);
      backing.PORT_methods_sendMessage_notFull = PORT_methods_sendMessage_notFull;
      vcd_write_val(sim_hdl, num++, PORT_methods_wroteWord_enq_v, 32u);
      backing.PORT_methods_wroteWord_enq_v = PORT_methods_wroteWord_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_methods_wroteWord_notFull, 1u);
      backing.PORT_methods_wroteWord_notFull = PORT_methods_wroteWord_notFull;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_0_first, 32u);
      backing.PORT_portalIfc_indications_0_first = PORT_portalIfc_indications_0_first;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_0_notEmpty, 1u);
      backing.PORT_portalIfc_indications_0_notEmpty = PORT_portalIfc_indications_0_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_1_first, 32u);
      backing.PORT_portalIfc_indications_1_first = PORT_portalIfc_indications_1_first;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_1_notEmpty, 1u);
      backing.PORT_portalIfc_indications_1_notEmpty = PORT_portalIfc_indications_1_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_intr_channel, 32u);
      backing.PORT_portalIfc_intr_channel = PORT_portalIfc_intr_channel;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_intr_status, 1u);
      backing.PORT_portalIfc_intr_status = PORT_portalIfc_intr_status;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_messageSize_size, 16u);
      backing.PORT_portalIfc_messageSize_size = PORT_portalIfc_messageSize_size;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_messageSize_size_methodNumber, 16u);
      backing.PORT_portalIfc_messageSize_size_methodNumber = PORT_portalIfc_messageSize_size_methodNumber;
    }
}

void MOD_mkConnectalProcIndicationOutputPipes::vcd_prims(tVCDDumpType dt,
							 MOD_mkConnectalProcIndicationOutputPipes &backing)
{
  INST_sendMessage_responseAdapter_bits.dump_VCD(dt, backing.INST_sendMessage_responseAdapter_bits);
  INST_sendMessage_responseAdapter_notEmptyReg.dump_VCD(dt,
							backing.INST_sendMessage_responseAdapter_notEmptyReg);
  INST_sendMessage_responseAdapter_shift.dump_VCD(dt, backing.INST_sendMessage_responseAdapter_shift);
  INST_wroteWord_responseAdapter_bits.dump_VCD(dt, backing.INST_wroteWord_responseAdapter_bits);
  INST_wroteWord_responseAdapter_notEmptyReg.dump_VCD(dt,
						      backing.INST_wroteWord_responseAdapter_notEmptyReg);
  INST_wroteWord_responseAdapter_shift.dump_VCD(dt, backing.INST_wroteWord_responseAdapter_shift);
}
