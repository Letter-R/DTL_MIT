Q1
after "sw" instruction, 
			//when the instruction that caused the misdirection is a store, the memory address for the store is set as next pc
			//unsuported instruction ensues...
            //
            //eInst.addr = (dInst.iType == Ld || dInst.iType == St) ? aluRes : brAddr;
maybe, break down eInst.addr into two attributes 
            
Q2
add cycle mark

Q3
EXE found mis-predict
next cycle IF stage fetch the new pc
but may need 3 cycle to deq scoreboard
and other 3 cycle to deal 3 wrong insts(IF < EXE(stage 4))

Q4
ID          RF
RF stall    EXE
RF stall    MEM
RF stall    WB
RF
3 cycle

Q5      change IF run at end of cycle 
-- assembly test: bpred_bht --
5178           -->4957
1007

-- assembly test: bpred_j_noloop --
235           -->204
34

-- assembly test: bpred_j --
2224           -->2159
1803

-- assembly test: bpred_ras --
1562           -->1534
283

Benchmark median
Cycles = 15649          -->15403
Insts  = 4243

Benchmark multiply
Cycles = 39306          -->39100
Insts  = 20893

Benchmark qsort
Cycles = 354693          -->354476
Insts  = 123496

Benchmark tower
Cycles = 7173            -->7018
Insts  = 4168

Benchmark vvadd
Cycles = 3637            -->3635
Insts  = 2408

Q6

- Absolute Jumps – Decode
- Register Jumps – RFetch
- Branches – Exec

BHT work for B-type, predict(look up) in Instruction Decode stage
PC+4 at IF stage, then BHT change PC at ID stage

taken or not predict at ID, 

     for Absolute Jumps, Addr at Decode stage
     for Register Jumps, Addr at RFetch stage
     for Branches      , Addr at Exec   stage

mantenance two epoch:
     epoch1 for JAL and JALR
     epoch2 for Branches

if instuct epoch1 and epoch2 both equal, not a mis-predict
else drop it 

epoch1 will update in ID and RF
epoch2 will update in EXE stage

       only w ppc once          |      
    ID           <    RF          <          EXE         <        IF
  w ppc[0]         w ppc[1]           r&w ppc[2]            read ppc[3]
 JAL >> !epoch1  JALR >> !epoch1   Branch >> !epoch2        BTB write ppc[3]
     update predict next Addr     |   check predic right  |   read next ppc

maybe

WB < MEM < EXE < RF < ID < IF




WB : sb.remove                // {remove, search, insert} < clear
     may poison to skip
     dMem.deq()

MEM: may poison to skip
     dMem.enq()

EXE:       
     read epoch1[0]           // if this pc is mis-predict, poison
     // if next pc is wrong
          flip epoch1[0]          
          write ppc[0]        
     update BTB and BHT

RF : read          epoch2[0]  // if this pc is mis-predict, drop
     // if next pc is wrong, flip
          flip epoch2[0]    
          write ppc[1]      

     sb.search                // stall
     sb.insert

ID : read          epoch3[0]  // if this pc is mis-predict, drop
     // if next pc is wrong, flip
     write epoch3[0]          
     Bht predict              // pipeline to next stage
     write ppc[2]             // make sure wrong inst not change ppc
     iMem.resp()

IF : read ppc[3]              // read the  next ppc
     read epoch1[1]
     read epoch2[1]
     read epoch3[1]

     iMem.enq()
     write ppc[3]             // predict next pc

failed


Q7
bpred_bht, sixstage is  5178 1007, IPC=0.194
    sixstagebht(01) is  2895 1009, IPC=0.349
    sixstagebht(11) is  2592 1007, IPC=0.349

Q8
bpred_j, sixstage is  2224 1803
  sixstagebht(01) is  2567 1805  
  sixstagebht(11) is  3513 1803

bpred_j_noloop, sixstage is 235 34
         sixstagebht(01) is 140 36
         sixstagebht(11) is 71  34

Q9
Benchmark median                      set bht init to 2'b11       delete Br in ID stage
Cycles = 15649          -->12348          -->10403                  -->9941
Insts  = 4243

Benchmark multiply
Cycles = 39306          -->43232          -->36579                  -->35578
Insts  = 20893

Benchmark qsort
Cycles = 354693          -->345425        -->289424                 -->282482
Insts  = 123496 

Benchmark tower
Cycles = 7173            -->6880          -->6333                   -->6643
Insts  = 4168

Benchmark vvadd
Cycles = 3637            -->5112          -->3618                  -->3624
Insts  = 2408


E6
RAS
730>>584
283

